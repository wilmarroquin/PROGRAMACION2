/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import javax.swing.*;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author WILMER
 */
public class ventana extends javax.swing.JFrame {

    /**
     * Creates new form ventana
     */
    public ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_principal = new javax.swing.JPanel();
        lbl_texto = new javax.swing.JLabel();
        lbl_texto2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_ventana = new javax.swing.JTextArea();
        btn_procesar = new javax.swing.JButton();
        lbl_txt1 = new javax.swing.JLabel();
        lbl_txt2 = new javax.swing.JLabel();
        lbl_txt3 = new javax.swing.JLabel();
        lbl_txt4 = new javax.swing.JLabel();
        lbl_txt5 = new javax.swing.JLabel();
        lbl_txt6 = new javax.swing.JLabel();
        lbl_txt7 = new javax.swing.JLabel();
        lbl_txt9 = new javax.swing.JLabel();
        lbl_txt10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lbl_txt12 = new javax.swing.JLabel();
        lbl_txt13 = new javax.swing.JLabel();
        lbl_txt14 = new javax.swing.JLabel();
        lbl_txt15 = new javax.swing.JLabel();
        lbl_txt16 = new javax.swing.JLabel();
        txt_longitud = new javax.swing.JLabel();
        txt_total = new javax.swing.JLabel();
        txt_pletra = new javax.swing.JLabel();
        txt_uletra = new javax.swing.JLabel();
        txt_lcentral = new javax.swing.JLabel();
        txt_ppalabra = new javax.swing.JLabel();
        txt_pcentral = new javax.swing.JLabel();
        txt_upalabra = new javax.swing.JLabel();
        txt_rep_a = new javax.swing.JLabel();
        txt_rep_e = new javax.swing.JLabel();
        txt_rep_i = new javax.swing.JLabel();
        txt_rep_o = new javax.swing.JLabel();
        txt_rep_u = new javax.swing.JLabel();
        txt_palabra_par = new javax.swing.JLabel();
        txt_palabra_impar = new javax.swing.JLabel();
        lbl_texto3 = new javax.swing.JLabel();
        txt_ventana2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_archivo = new javax.swing.JMenu();
        menu_abrir = new javax.swing.JMenuItem();
        menu_guardar = new javax.swing.JMenuItem();
        menu_guardarcomo = new javax.swing.JMenuItem();
        menu_editar = new javax.swing.JMenu();
        menu_copiar = new javax.swing.JMenuItem();
        menu_cortar = new javax.swing.JMenuItem();
        menu_pegar = new javax.swing.JMenuItem();
        menu_buscar = new javax.swing.JMenuItem();
        menu_reemplazar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_texto.setText("Traduccion a clave murcielago");

        lbl_texto2.setText("Ingrese un texto o abra un archivo");

        txt_ventana.setColumns(20);
        txt_ventana.setRows(5);
        jScrollPane1.setViewportView(txt_ventana);

        btn_procesar.setText("Procesar");
        btn_procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_procesarActionPerformed(evt);
            }
        });

        lbl_txt1.setText("Longitud de palabas......:");

        lbl_txt2.setText("Total de palabras............:");

        lbl_txt3.setText("Primer letra del texto.....:");

        lbl_txt4.setText("Última letra del texto......:");

        lbl_txt5.setText("Letra central del texto...:");

        lbl_txt6.setText("Primer palabra................:");

        lbl_txt7.setText("Palabra central ................:");

        lbl_txt9.setText("Última palabra ................:");

        lbl_txt10.setText("Repeticiones de \"A\", \"a\" o \"a\":");

        jLabel11.setText("Repeticiones de \"E\", \"e\" o \"e\":");

        lbl_txt12.setText("Repeticiones de \"I\", \"i\" o \"i\":");

        lbl_txt13.setText("Repeticiones de \"O\",\"o\" o \"o\":");

        lbl_txt14.setText("Repeticiones de \"U\", \"u\" o \"u\".");

        lbl_txt15.setText("Palabras con cantidad de caracteres par:");

        lbl_txt16.setText("Palabras con cantidad de caracteres impar:");

        lbl_texto3.setText("Manejo de Cadenas");

        txt_ventana2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pnl_principalLayout = new javax.swing.GroupLayout(pnl_principal);
        pnl_principal.setLayout(pnl_principalLayout);
        pnl_principalLayout.setHorizontalGroup(
            pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_principalLayout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(lbl_texto)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnl_principalLayout.createSequentialGroup()
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_principalLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lbl_texto2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_principalLayout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(btn_procesar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnl_principalLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_principalLayout.createSequentialGroup()
                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbl_txt4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_txt1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_txt3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_txt2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_txt5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_txt6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_txt7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_txt9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_principalLayout.createSequentialGroup()
                                .addComponent(txt_upalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnl_principalLayout.createSequentialGroup()
                                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnl_principalLayout.createSequentialGroup()
                                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_pletra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_uletra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lbl_txt10)
                                                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lbl_txt12)
                                                    .addComponent(jLabel11)))
                                            .addComponent(lbl_txt13, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(pnl_principalLayout.createSequentialGroup()
                                        .addComponent(txt_lcentral, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbl_txt14))
                                    .addGroup(pnl_principalLayout.createSequentialGroup()
                                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txt_pcentral, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(txt_ppalabra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_txt16, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lbl_txt15, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_palabra_par, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txt_rep_u, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_rep_o, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_rep_i, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_rep_e, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_rep_a, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_palabra_impar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .addGroup(pnl_principalLayout.createSequentialGroup()
                        .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_ventana2, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE))))
            .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnl_principalLayout.createSequentialGroup()
                    .addGap(259, 259, 259)
                    .addComponent(lbl_texto3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(270, Short.MAX_VALUE)))
        );
        pnl_principalLayout.setVerticalGroup(
            pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_principalLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(lbl_texto2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_procesar)
                .addGap(8, 8, 8)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_txt1)
                    .addComponent(lbl_txt10)
                    .addComponent(txt_longitud)
                    .addComponent(txt_rep_a))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_txt2)
                    .addComponent(jLabel11)
                    .addComponent(txt_total)
                    .addComponent(txt_rep_e))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_txt3)
                    .addComponent(lbl_txt12)
                    .addComponent(txt_pletra)
                    .addComponent(txt_rep_i))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_txt4)
                    .addComponent(lbl_txt13)
                    .addComponent(txt_uletra)
                    .addComponent(txt_rep_o))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_txt5)
                    .addComponent(lbl_txt14)
                    .addComponent(txt_lcentral)
                    .addComponent(txt_rep_u))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_txt6)
                    .addComponent(lbl_txt15)
                    .addComponent(txt_ppalabra)
                    .addComponent(txt_palabra_par))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_txt7)
                    .addComponent(lbl_txt16)
                    .addComponent(txt_pcentral)
                    .addComponent(txt_palabra_impar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_txt9)
                    .addComponent(txt_upalabra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_ventana2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnl_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnl_principalLayout.createSequentialGroup()
                    .addGap(26, 26, 26)
                    .addComponent(lbl_texto3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(521, Short.MAX_VALUE)))
        );

        menu_archivo.setText("Archivo");

        menu_abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_abrir.setText("Abrir");
        menu_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_abrirActionPerformed(evt);
            }
        });
        menu_archivo.add(menu_abrir);

        menu_guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_guardar.setText("Guardar");
        menu_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_guardarActionPerformed(evt);
            }
        });
        menu_archivo.add(menu_guardar);

        menu_guardarcomo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        menu_guardarcomo.setText("Guardar como");
        menu_guardarcomo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_guardarcomoActionPerformed(evt);
            }
        });
        menu_archivo.add(menu_guardarcomo);

        jMenuBar1.add(menu_archivo);

        menu_editar.setText("Editar");

        menu_copiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_copiar.setText("Copiar ");
        menu_copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_copiarActionPerformed(evt);
            }
        });
        menu_editar.add(menu_copiar);

        menu_cortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_cortar.setText("Cortar");
        menu_editar.add(menu_cortar);

        menu_pegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_pegar.setText("Pegar");
        menu_editar.add(menu_pegar);

        menu_buscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_buscar.setText("Buscar");
        menu_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_buscarActionPerformed(evt);
            }
        });
        menu_editar.add(menu_buscar);

        menu_reemplazar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_reemplazar.setText("Reemplazar");
        menu_reemplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_reemplazarActionPerformed(evt);
            }
        });
        menu_editar.add(menu_reemplazar);

        jMenuBar1.add(menu_editar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnl_principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(pnl_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menu_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_abrirActionPerformed
        // TODO add your handling code here: 
     JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Seleccionar un archivo de texto");
    fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos de texto (*.txt)", "txt"));
    int seleccion = fileChooser.showOpenDialog(this);
    if (seleccion == JFileChooser.APPROVE_OPTION) {
        File archivo = fileChooser.getSelectedFile();
        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea;
            StringBuilder contenido = new StringBuilder();
            while ((linea = br.readLine()) != null) {
                contenido.append(linea).append("\n");
            }
           
            txt_ventana.setText(contenido.toString());

        } catch (IOException ex) {
            ex.printStackTrace();
        }
    } else {
        System.out.println("No se seleccionó ningún archivo.");
    }
    }//GEN-LAST:event_menu_abrirActionPerformed

    private void menu_guardarcomoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_guardarcomoActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Guardar como");
    fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos de texto (*.txt)", "txt"));
    int seleccion = fileChooser.showSaveDialog(this);
    if (seleccion == JFileChooser.APPROVE_OPTION) {
        File archivoGuardar = fileChooser.getSelectedFile();
        if (!archivoGuardar.getName().toLowerCase().endsWith(".txt")) {
            archivoGuardar = new File(archivoGuardar.getAbsolutePath() + ".txt");
        }
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(archivoGuardar))) {
            bw.write(txt_ventana.getText());
            System.out.println("Archivo guardado exitosamente.");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    } else {
        System.out.println("Operación de guardado cancelada.");
    }
    }                                                

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void menupegarActionPerformed(java.awt.event.ActionEvent evt) {                                          

        Clipboard portapapeles = Toolkit.getDefaultToolkit().getSystemClipboard();
    try {
        Transferable contenido = portapapeles.getContents(null);
        if (contenido != null && contenido.isDataFlavorSupported(DataFlavor.stringFlavor)) {
            String textoPegado = (String) contenido.getTransferData(DataFlavor.stringFlavor);
            txt_ventana.insert(textoPegado, txt_ventana.getCaretPosition());
            System.out.println("Texto pegado: " + textoPegado);
        } else {
            System.out.println("No se encontrotexto en el portapapeles.");
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
        
       
    }//GEN-LAST:event_menu_guardarcomoActionPerformed

    private void menu_copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_copiarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menu_copiarActionPerformed

    private void menu_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menu_buscarActionPerformed

    private void menu_reemplazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_reemplazarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menu_reemplazarActionPerformed

    private void menu_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_guardarActionPerformed
        // TODO add your handling code here:
       Object archivoActual = null;
       
        if (archivoActual != null) {
        
        try (BufferedWriter bw = new BufferedWriter(new FileWriter((String) archivoActual))) {
            bw.write(txt_ventana.getText());
            System.out.println("Archivo sobreescrito exitosamente.");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    } else {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar archivo de texto");
        
        int seleccion = fileChooser.showSaveDialog(this);
        
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivoGuardar = fileChooser.getSelectedFile();
            if (!archivoGuardar.getName().toLowerCase().endsWith(".txt")) {
                archivoGuardar = new File(archivoGuardar.getAbsolutePath() + ".txt");
            }
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(archivoGuardar))) {
                bw.write(txt_ventana.getText());
                System.out.println("Archivo guardado exitosamente.");
                archivoActual = archivoGuardar;
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        } else {
            System.out.println("Operación de guardado cancelada.");
        }
    }

    }//GEN-LAST:event_menu_guardarActionPerformed

    private void btn_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_procesarActionPerformed
        // TODO add your handling code here:
        String textoOriginal = txt_ventana.getText().toLowerCase().trim();
        int longitudTexto = textoOriginal.length();
        txt_longitud.setText(String.valueOf(longitudTexto));
        String[][] traduccionMurcielago = {
            {"m", "0"}, {"u", "1"}, {"r", "2"}, {"c", "3"}, {"i", "4"}, {"e", "5"}, {"l", "6"}, {"a", "7"}, {"g", "8"}, {"o", "9"}
        };
        String textoTraducido = textoOriginal;
        for (String[] par : traduccionMurcielago) {
            textoTraducido = textoTraducido.replace(par[0], par[1]);
        }
        txt_ventana2.setText(textoTraducido);
        String[] palabras = textoOriginal.split("\\s+");
        int totalpalabras = palabras.length;
        txt_total.setText(String.valueOf(totalpalabras));
        if(longitudTexto > 0){
            String primeraLetra = String.valueOf(textoOriginal.charAt(0));
            txt_pletra.setText(primeraLetra);
        }
        if(longitudTexto > 0){
            String ultimaLetra = String.valueOf(textoOriginal.charAt(longitudTexto -1));
            txt_uletra.setText(ultimaLetra);
        }
        if(longitudTexto > 0){
            int posicionCentral = longitudTexto / 2;
            String letraCentral = String.valueOf(textoOriginal.charAt(posicionCentral));
            txt_lcentral.setText(letraCentral);
        }
        if(totalpalabras > 0){
            txt_ppalabra.setText(palabras[0]);
        }
        if(totalpalabras > 0){
            int posicionpcentral = totalpalabras /2;
            this.txt_pcentral.setText(palabras[posicionpcentral]);
        }
        if(totalpalabras > 0){
            this.txt_upalabra.setText(palabras[totalpalabras -1]);
        }

        int repA = repvocal (textoOriginal, "a") + repvocal (textoOriginal, "á");
        int repE = repvocal (textoOriginal, "e") + repvocal (textoOriginal, "é");
        int repI = repvocal (textoOriginal, "i") + repvocal (textoOriginal, "í");
        int repO = repvocal (textoOriginal, "o") + repvocal (textoOriginal, "ó");
        int repU = repvocal (textoOriginal, "u") + repvocal (textoOriginal, "ú");
        txt_rep_a.setText(String.valueOf(repA));
        txt_rep_e.setText(String.valueOf(repE));
        txt_rep_i.setText(String.valueOf(repI));
        txt_rep_o.setText(String.valueOf(repO));
        txt_rep_u.setText(String.valueOf(repU));
        StringBuilder palabrasPar = new StringBuilder();
        StringBuilder palabrasImpar = new StringBuilder();
        for (String palabra : palabras){
            if(palabra.length() % 2 == 0){
                palabrasPar.append(palabra).append(" ");
            }else{
                palabrasImpar.append(palabra).append(" ");
            }
        }
        txt_palabra_par.setText(palabrasPar.toString().trim());
        txt_palabra_impar.setText(palabrasImpar.toString().trim());
    }//GEN-LAST:event_btn_procesarActionPerformed

    private int repvocal(String texto, String caracter) {
    int count = 0;
    int index = 0;
    while ((index = texto.indexOf(caracter, index)) != -1) {
        count++;
        index++;
    }
    return count;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_procesar;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_texto;
    private javax.swing.JLabel lbl_texto2;
    private javax.swing.JLabel lbl_texto3;
    private javax.swing.JLabel lbl_txt1;
    private javax.swing.JLabel lbl_txt10;
    private javax.swing.JLabel lbl_txt12;
    private javax.swing.JLabel lbl_txt13;
    private javax.swing.JLabel lbl_txt14;
    private javax.swing.JLabel lbl_txt15;
    private javax.swing.JLabel lbl_txt16;
    private javax.swing.JLabel lbl_txt2;
    private javax.swing.JLabel lbl_txt3;
    private javax.swing.JLabel lbl_txt4;
    private javax.swing.JLabel lbl_txt5;
    private javax.swing.JLabel lbl_txt6;
    private javax.swing.JLabel lbl_txt7;
    private javax.swing.JLabel lbl_txt9;
    private javax.swing.JMenuItem menu_abrir;
    private javax.swing.JMenu menu_archivo;
    private javax.swing.JMenuItem menu_buscar;
    private javax.swing.JMenuItem menu_copiar;
    private javax.swing.JMenuItem menu_cortar;
    private javax.swing.JMenu menu_editar;
    private javax.swing.JMenuItem menu_guardar;
    private javax.swing.JMenuItem menu_guardarcomo;
    private javax.swing.JMenuItem menu_pegar;
    private javax.swing.JMenuItem menu_reemplazar;
    private javax.swing.JPanel pnl_principal;
    private javax.swing.JLabel txt_lcentral;
    private javax.swing.JLabel txt_longitud;
    private javax.swing.JLabel txt_palabra_impar;
    private javax.swing.JLabel txt_palabra_par;
    private javax.swing.JLabel txt_pcentral;
    private javax.swing.JLabel txt_pletra;
    private javax.swing.JLabel txt_ppalabra;
    private javax.swing.JLabel txt_rep_a;
    private javax.swing.JLabel txt_rep_e;
    private javax.swing.JLabel txt_rep_i;
    private javax.swing.JLabel txt_rep_o;
    private javax.swing.JLabel txt_rep_u;
    private javax.swing.JLabel txt_total;
    private javax.swing.JLabel txt_uletra;
    private javax.swing.JLabel txt_upalabra;
    private javax.swing.JTextArea txt_ventana;
    private javax.swing.JLabel txt_ventana2;
    // End of variables declaration//GEN-END:variables
}
